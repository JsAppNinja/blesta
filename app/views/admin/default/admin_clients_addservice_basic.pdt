
			<?php
			$this->Form->create();
			if ($this->Html->ifSet($parent_service_id)) {
				$this->Form->fieldHidden("parent_service_id", $parent_service_id);
			}
			?>
			<div class="title_row first">
				<h3><?php $this->_("AdminClients.addservice_basic.basic_heading");?></h3>
			</div>
			<div class="pad">
				<ul>
					<li>
						<?php $this->Form->label($this->_("AdminClients.addservice_basic.field_invoice_method", true));?>
						
						<?php $this->Form->fieldRadio("invoice_method", "create", !isset($vars->invoice_method) || $this->Html->ifSet($vars->invoice_method) == "create", array('id' => "invoice_method_create"));?>
						<?php $this->Form->label($this->_("AdminClients.addservice_basic.field_invoice_method_create", true), "invoice_method_create", array('class' => "inline"));?>
						
						<?php
						if (count($this->Html->ifSet($invoices, array())) > 0) {
							$this->Form->fieldRadio("invoice_method", "append", $this->Html->ifSet($vars->invoice_method) == "append", array('id' => "invoice_method_append"));
							$this->Form->label($this->_("AdminClients.addservice_basic.field_invoice_method_append", true), "invoice_method_append", array('class' => "inline"));
							$this->Form->fieldSelect("invoice_id", $invoices, $this->Html->ifSet($vars->invoice_id), array('class' => "inline"));
						}
						?>
						<?php $this->Form->fieldRadio("invoice_method", "none", $this->Html->ifSet($vars->invoice_method) == "none", array('id' => "invoice_method_none"));?>
						<?php $this->Form->label($this->_("AdminClients.addservice_basic.field_invoice_method_dont", true), "invoice_method_none", array('class' => "inline"));?>
					</li>
					<li>
						<?php $this->Form->label($this->_("AdminClients.addservice_basic.field_term", true), "pricing_id");?>
						<?php $this->Form->fieldSelect("pricing_id", array('' => $this->_("AppController.select.please", true)) + (array)$this->Html->ifSet($terms), $this->Html->ifSet($vars->pricing_id), array('id' => "pricing_id"));?>
					</li>
					<li>
						<?php $this->Form->fieldCheckbox("notify_order", "true", $this->Html->ifSet($vars->notify_order, "true") == "true", array('id' => "notify_order"));?>
						<?php $this->Form->label($this->_("AdminClients.addservice_basic.field_notify_order", true), "notify_order", array('class' => "inline"));?>
					</li>
					<li>
						<?php $this->Form->label($this->_("AdminClients.addservice_basic.field_status", true));?>
						<?php $this->Form->fieldSelect("status", $status, $this->Html->ifSet($vars->status), array('id' => "status"));?>
					</li>
					<li>
						<?php $this->Form->fieldCheckbox("use_module", "true", $this->Html->ifSet($vars->use_module, "true") == "true", array('id' => "use_module"));?>
						<?php $this->Form->label($this->_("AdminClients.addservice_basic.field_use_module", true, $this->Html->ifSet($module_name)), "use_module", array('class' => "inline"));?>
					</li>
				</ul>
			</div>
			
			<?php
			if ($this->Html->ifSet($fields) && !empty($fields)) {
			?>
				<div class="title_row">
					<h3><?php $this->_("AdminClients.addservice_basic.module_heading", false, $this->Html->ifSet($module_name));?></h3>
				</div>
				<div class="pad">
                    <?php
                    // Set any hidden fields
                    foreach ($fields as $index => $field) {
                        foreach ($field->fields as $input) {
                            if ($input->type == "fieldHidden") {
                                call_user_func_array(array($this->Form, $input->type), $input->params);
                                unset($fields[$index]);
                                continue 2;
                            }
                        }
                    }
                    ?>
					<ul>
						<?php
						foreach ($fields as $field) {
						?>
						<li>
							<?php
							// Draw the primary label/field
							call_user_func_array(array($this->Form, $field->type), $field->params);
							
							// Draw each form field associated with this label
							$tooltips = array();
							foreach ($field->fields as $input) {
								
								// Collect all tooltips to be displayed at the end
								if ($input->type == "tooltip") {
									$tooltips[] = $input;
									continue;
								}
								
								call_user_func_array(array($this->Form, $input->type), $input->params);
								
								// Draw the form field's secondary label if set
								if (isset($input->label)) {
									if (isset($input->label->params['attributes']['class'])) {
										if (is_array($input->label->params['attributes']['class']))
											$input->label->params['attributes']['class'][] = "inline";
										else
											$input->label->params['attributes']['class'] .= " inline";
									}
									else
										$input->label->params['attributes']['class'] = "inline";
										
									call_user_func_array(array($this->Form, "label"), $input->label->params);
								}
							}
							
							foreach ($tooltips as $tooltip) {
							?>
							<span class="tooltip">
								<?php $this->_("AppController.tooltip.text");?>
								<div><?php $this->Html->_($tooltip->params['message']);?></div>
							</span>
							<?php
							}
							?>
						</li>
						<?php
						}
						?>
					</ul>
					<?php echo $this->Html->ifSet($html);?>
				</div>
			<?php
			}
			?>
			
			<div class="package_options">
				<?php
				if (isset($vars->configoptions)) {
					foreach ($vars->configoptions as $key => $value) {
						$this->Form->fieldHidden("configoptions[" . $key . "]", $value);
					}
				}
				?>
			</div>
			
			<?php
			if ($this->Html->ifSet($addon_groups) && !empty($addon_groups)) {
			?>
				<div class="title_row">
					<h3><?php $this->_("AdminClients.addservice_basic.addons_heading");?></h3>
				</div>
				<?php
				foreach ($addon_groups as $addon_group) {
				?>
				<div class="group_container">
					<h4><a href="#" id="addon_group_id_<?php $this->Html->_($addon_group->id);?>" class="show_content toggle_addon_group"><?php $this->Html->_($addon_group->name);?></a></h4>
					<div class="pad reverse addon_group_content" id="addon_group_content_id_<?php $this->Html->_($addon_group->id);?>">
						<ul>
							<li>
								<?php
								$field_id = "addon_" . $this->Html->_($addon_group->id, true) . "_";
								$this->Form->fieldRadio("addon[" . $this->Html->_($addon_group->id, true) . "][id]", "", $this->Html->ifSet($vars->addon[$addon_group->id]['id']) == "", array('id' => $field_id));
								$this->Form->label($this->_("AdminClients.addservice_basic.field_default_addon", true), $field_id, array('class' => "inline"));
								?>
							</li>
							<?php
							foreach ($addon_group->packages as $addon_package) {
								$field_id = "addon_" . $this->Html->_($addon_group->id, true) . "_" . $this->Html->_($addon_package->id, true);
							?>
							<li>
								<?php
								$this->Form->fieldRadio("addon[" . $this->Html->_($addon_group->id, true) . "][id]", $this->Html->_($addon_package->id, true), $this->Html->ifSet($vars->addon[$addon_group->id]['id']) == $addon_package->id, array('id' => $field_id));
								$this->Form->label($addon_package->name, $field_id, array('class' => "inline"));
								?>
							</li>
							<?php
							}
							?>
						</ul>
					</div>
				</div>
				<?php
				}
				?>
			<?php
			}
			?>
			<div class="button_row">
				<a class="btn_right submit" href="#"><?php $this->_("AdminClients.addservice_basic.field_continue");?></a>
			</div>
			<?php
			$this->Form->end();
			?>
			
<script type="text/javascript">
	$(document).ready(function() {
		$('.addon_group_content').hide();
		
		$('.addon_group_content input[type=radio]:checked').first(function() {
			$(this).closest(".addon_group_content").show();
		});
		
		$('#status').change(function() {
			if ($(this).val() != "active")
				$('#use_module').attr('checked', '');
		});
		
		// Toggle notes and recurring sections
		$('.group_container').each(function() {
			$(this).blestaBindToggleEvent("#" + $(".toggle_addon_group", this).attr("id"), "#" + $(".addon_group_content", this).attr("id"));
		});
		
		// Fetch package options
		packageOptions();
		$('#pricing_id').change(function() {
			packageOptions();
		});
		
		function packageOptions() {
			var pricing_id = $('#pricing_id').val();
			
			if (pricing_id) {
				var params = $('[name^="configoptions"]', $('.package_options').closest('form')).serialize();
				$(this).blestaRequest('GET', '<?php echo $this->Html->safe($this->base_uri . "clients/packageoptions/");?>' + pricing_id, params, function(data) {
					$('.package_options').html(data);
				},
				null,
				{dataType: 'json'});
			}
		}
	});
</script>